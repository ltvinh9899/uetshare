// Generated by view binder compiler. Do not edit!
package ie.app.uetstudents.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.hdodenhof.circleimageview.CircleImageView;
import ie.app.uetstudents.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUettalkBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CircleImageView imageUettalk;

  @NonNull
  public final LinearLayout linear1;

  @NonNull
  public final RecyclerView recyclerviewItemUettalk;

  @NonNull
  public final Button statusUettalk;

  @NonNull
  public final ProgressBar uetTalkProgressbar;

  @NonNull
  public final NestedScrollView uettalkScrollview;

  private FragmentUettalkBinding(@NonNull ConstraintLayout rootView,
      @NonNull CircleImageView imageUettalk, @NonNull LinearLayout linear1,
      @NonNull RecyclerView recyclerviewItemUettalk, @NonNull Button statusUettalk,
      @NonNull ProgressBar uetTalkProgressbar, @NonNull NestedScrollView uettalkScrollview) {
    this.rootView = rootView;
    this.imageUettalk = imageUettalk;
    this.linear1 = linear1;
    this.recyclerviewItemUettalk = recyclerviewItemUettalk;
    this.statusUettalk = statusUettalk;
    this.uetTalkProgressbar = uetTalkProgressbar;
    this.uettalkScrollview = uettalkScrollview;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUettalkBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUettalkBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_uettalk, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUettalkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_uettalk;
      CircleImageView imageUettalk = ViewBindings.findChildViewById(rootView, id);
      if (imageUettalk == null) {
        break missingId;
      }

      id = R.id.linear1;
      LinearLayout linear1 = ViewBindings.findChildViewById(rootView, id);
      if (linear1 == null) {
        break missingId;
      }

      id = R.id.recyclerview_item_uettalk;
      RecyclerView recyclerviewItemUettalk = ViewBindings.findChildViewById(rootView, id);
      if (recyclerviewItemUettalk == null) {
        break missingId;
      }

      id = R.id.status_uettalk;
      Button statusUettalk = ViewBindings.findChildViewById(rootView, id);
      if (statusUettalk == null) {
        break missingId;
      }

      id = R.id.uet_talk_progressbar;
      ProgressBar uetTalkProgressbar = ViewBindings.findChildViewById(rootView, id);
      if (uetTalkProgressbar == null) {
        break missingId;
      }

      id = R.id.uettalk_scrollview;
      NestedScrollView uettalkScrollview = ViewBindings.findChildViewById(rootView, id);
      if (uettalkScrollview == null) {
        break missingId;
      }

      return new FragmentUettalkBinding((ConstraintLayout) rootView, imageUettalk, linear1,
          recyclerviewItemUettalk, statusUettalk, uetTalkProgressbar, uettalkScrollview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package ie.app.uetstudents.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.hdodenhof.circleimageview.CircleImageView;
import ie.app.uetstudents.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentWriteNotificationBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button chuyentrangNotifi;

  @NonNull
  public final EditText edtxtStatusNotifi;

  @NonNull
  public final CircleImageView imageWritefragmentNotifi;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final RecyclerView listanhWriteForumNotifi;

  @NonNull
  public final LinearLayout relativelayoutNotifi;

  @NonNull
  public final TextView txtnameWritefragmentNotifi;

  @NonNull
  public final Button writeCameraNotifi;

  @NonNull
  public final EditText writeTitleNotifi;

  private FragmentWriteNotificationBinding(@NonNull RelativeLayout rootView,
      @NonNull Button chuyentrangNotifi, @NonNull EditText edtxtStatusNotifi,
      @NonNull CircleImageView imageWritefragmentNotifi, @NonNull LinearLayout linear,
      @NonNull RecyclerView listanhWriteForumNotifi, @NonNull LinearLayout relativelayoutNotifi,
      @NonNull TextView txtnameWritefragmentNotifi, @NonNull Button writeCameraNotifi,
      @NonNull EditText writeTitleNotifi) {
    this.rootView = rootView;
    this.chuyentrangNotifi = chuyentrangNotifi;
    this.edtxtStatusNotifi = edtxtStatusNotifi;
    this.imageWritefragmentNotifi = imageWritefragmentNotifi;
    this.linear = linear;
    this.listanhWriteForumNotifi = listanhWriteForumNotifi;
    this.relativelayoutNotifi = relativelayoutNotifi;
    this.txtnameWritefragmentNotifi = txtnameWritefragmentNotifi;
    this.writeCameraNotifi = writeCameraNotifi;
    this.writeTitleNotifi = writeTitleNotifi;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWriteNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWriteNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_write_notification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWriteNotificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chuyentrang_notifi;
      Button chuyentrangNotifi = ViewBindings.findChildViewById(rootView, id);
      if (chuyentrangNotifi == null) {
        break missingId;
      }

      id = R.id.edtxt_status_notifi;
      EditText edtxtStatusNotifi = ViewBindings.findChildViewById(rootView, id);
      if (edtxtStatusNotifi == null) {
        break missingId;
      }

      id = R.id.image_writefragment_notifi;
      CircleImageView imageWritefragmentNotifi = ViewBindings.findChildViewById(rootView, id);
      if (imageWritefragmentNotifi == null) {
        break missingId;
      }

      id = R.id.linear;
      LinearLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.listanh_write_forum_notifi;
      RecyclerView listanhWriteForumNotifi = ViewBindings.findChildViewById(rootView, id);
      if (listanhWriteForumNotifi == null) {
        break missingId;
      }

      id = R.id.relativelayout_notifi;
      LinearLayout relativelayoutNotifi = ViewBindings.findChildViewById(rootView, id);
      if (relativelayoutNotifi == null) {
        break missingId;
      }

      id = R.id.txtname_writefragment_notifi;
      TextView txtnameWritefragmentNotifi = ViewBindings.findChildViewById(rootView, id);
      if (txtnameWritefragmentNotifi == null) {
        break missingId;
      }

      id = R.id.write_camera_notifi;
      Button writeCameraNotifi = ViewBindings.findChildViewById(rootView, id);
      if (writeCameraNotifi == null) {
        break missingId;
      }

      id = R.id.write_title_notifi;
      EditText writeTitleNotifi = ViewBindings.findChildViewById(rootView, id);
      if (writeTitleNotifi == null) {
        break missingId;
      }

      return new FragmentWriteNotificationBinding((RelativeLayout) rootView, chuyentrangNotifi,
          edtxtStatusNotifi, imageWritefragmentNotifi, linear, listanhWriteForumNotifi,
          relativelayoutNotifi, txtnameWritefragmentNotifi, writeCameraNotifi, writeTitleNotifi);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

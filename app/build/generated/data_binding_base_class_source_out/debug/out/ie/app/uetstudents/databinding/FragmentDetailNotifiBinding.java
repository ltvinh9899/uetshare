// Generated by view binder compiler. Do not edit!
package ie.app.uetstudents.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ie.app.uetstudents.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailNotifiBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView contentNotifi;

  @NonNull
  public final TextView detaiNotifiTitle;

  @NonNull
  public final RecyclerView recyclerviewListtailieu;

  @NonNull
  public final TextView timeDetail;

  private FragmentDetailNotifiBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView contentNotifi, @NonNull TextView detaiNotifiTitle,
      @NonNull RecyclerView recyclerviewListtailieu, @NonNull TextView timeDetail) {
    this.rootView = rootView;
    this.contentNotifi = contentNotifi;
    this.detaiNotifiTitle = detaiNotifiTitle;
    this.recyclerviewListtailieu = recyclerviewListtailieu;
    this.timeDetail = timeDetail;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailNotifiBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailNotifiBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detail_notifi, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailNotifiBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.content_notifi;
      TextView contentNotifi = ViewBindings.findChildViewById(rootView, id);
      if (contentNotifi == null) {
        break missingId;
      }

      id = R.id.detai_notifi_title;
      TextView detaiNotifiTitle = ViewBindings.findChildViewById(rootView, id);
      if (detaiNotifiTitle == null) {
        break missingId;
      }

      id = R.id.recyclerview_listtailieu;
      RecyclerView recyclerviewListtailieu = ViewBindings.findChildViewById(rootView, id);
      if (recyclerviewListtailieu == null) {
        break missingId;
      }

      id = R.id.time_detail;
      TextView timeDetail = ViewBindings.findChildViewById(rootView, id);
      if (timeDetail == null) {
        break missingId;
      }

      return new FragmentDetailNotifiBinding((NestedScrollView) rootView, contentNotifi,
          detaiNotifiTitle, recyclerviewListtailieu, timeDetail);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
